sparse bit set	intsets.html#sparse-bit-set_1	Module intsets	
IntSet	intsets.html#IntSet	intsets: IntSet	
items	intsets.html#items.i,IntSet	intsets: items(s: IntSet): int	
initIntSet	intsets.html#initIntSet	intsets: initIntSet(): IntSet	
contains	intsets.html#contains,IntSet,int	intsets: contains(s: IntSet; key: int): bool	
incl	intsets.html#incl,IntSet,int	intsets: incl(s: var IntSet; key: int)	
incl	intsets.html#incl,IntSet,IntSet	intsets: incl(s: var IntSet; other: IntSet)	
toIntSet	intsets.html#toIntSet,openArray[int]	intsets: toIntSet(x: openArray[int]): IntSet	
containsOrIncl	intsets.html#containsOrIncl,IntSet,int	intsets: containsOrIncl(s: var IntSet; key: int): bool	
excl	intsets.html#excl,IntSet,int	intsets: excl(s: var IntSet; key: int)	
excl	intsets.html#excl,IntSet,IntSet	intsets: excl(s: var IntSet; other: IntSet)	
len	intsets.html#len,IntSet	intsets: len(s: IntSet): int	
missingOrExcl	intsets.html#missingOrExcl,IntSet,int	intsets: missingOrExcl(s: var IntSet; key: int): bool	
clear	intsets.html#clear,IntSet	intsets: clear(result: var IntSet)	
isNil	intsets.html#isNil,IntSet	intsets: isNil(x: IntSet): bool	
assign	intsets.html#assign,IntSet,IntSet	intsets: assign(dest: var IntSet; src: IntSet)	
union	intsets.html#union,IntSet,IntSet	intsets: union(s1, s2: IntSet): IntSet	
intersection	intsets.html#intersection,IntSet,IntSet	intsets: intersection(s1, s2: IntSet): IntSet	
difference	intsets.html#difference,IntSet,IntSet	intsets: difference(s1, s2: IntSet): IntSet	
symmetricDifference	intsets.html#symmetricDifference,IntSet,IntSet	intsets: symmetricDifference(s1, s2: IntSet): IntSet	
`+`	intsets.html#+,IntSet,IntSet	intsets: `+`(s1, s2: IntSet): IntSet	
`*`	intsets.html#*,IntSet,IntSet	intsets: `*`(s1, s2: IntSet): IntSet	
`-`	intsets.html#-,IntSet,IntSet	intsets: `-`(s1, s2: IntSet): IntSet	
disjoint	intsets.html#disjoint,IntSet,IntSet	intsets: disjoint(s1, s2: IntSet): bool	
card	intsets.html#card,IntSet	intsets: card(s: IntSet): int	
`&lt;=`	intsets.html#<=,IntSet,IntSet	intsets: `&lt;=`(s1, s2: IntSet): bool	
`&lt;`	intsets.html#<,IntSet,IntSet	intsets: `&lt;`(s1, s2: IntSet): bool	
`==`	intsets.html#==,IntSet,IntSet	intsets: `==`(s1, s2: IntSet): bool	
`$`	intsets.html#$,IntSet	intsets: `$`(s: IntSet): string	
